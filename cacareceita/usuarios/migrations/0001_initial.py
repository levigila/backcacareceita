# Generated by Django 5.0.4 on 2024-04-19 22:18

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingrediente',
            fields=[
                ('id_ingredientes', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField()),
                ('categoria', models.CharField(choices=[('proteina', 'Proteína'), ('carboidrato', 'Carboidrato'), ('oleos_gorduras', 'Óleos/Gorduras'), ('carnes', 'Carnes'), ('vegetais', 'Vegetais'), ('frutas', 'Frutas'), ('legumes', 'Legumes')], max_length=20)),
                ('unidade_de_medida', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Receita',
            fields=[
                ('id_receita', models.AutoField(primary_key=True, serialize=False)),
                ('nome_receita', models.CharField(max_length=100)),
                ('descricao', models.TextField()),
                ('modo_de_preparo', models.TextField()),
                ('avaliacao', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('nome_usuario', models.CharField(max_length=100)),
                ('ID_cadastro', models.CharField(max_length=50)),
                ('tipo', models.CharField(choices=[('visitor', 'Visitante'), ('registered', 'Usuário Cadastrado'), ('premium', 'Usuário Premium')], default='visitor', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Alergeno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('glúten', models.BooleanField(default=False)),
                ('lactose', models.BooleanField(default=False)),
                ('nozes', models.BooleanField(default=False)),
                ('ingrediente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='alergenos', to='usuarios.ingrediente')),
            ],
        ),
    ]
